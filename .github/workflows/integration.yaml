name: Integration Tests

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  integration:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout agari-helm
        uses: actions/checkout@v4
        with:
          repository: jbothma/agari-helm
          ref: integration-tested
          path: agari-helm

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start services
        env:
          AGARI_HELM_PATH: ${{ github.workspace }}/agari-helm
        run: docker compose up -d

      - name: Wait for services to be healthy
        timeout-minutes: 2
        run: |
          echo "Waiting for all services to become healthy (excluding zookeeper)..."
          END=$((SECONDS+120))

          while [ $SECONDS -lt $END ]; do
            # Get list of unhealthy services (excluding NAME header, already healthy services, and zookeeper)
            UNHEALTHY=$(docker compose ps --status running | egrep -v '(NAME|healthy|zookeeper)' || true)

            if [ -z "$UNHEALTHY" ]; then
              echo "All services are healthy!"
              docker compose ps
              exit 0
            fi

            echo "Still waiting for services to become healthy..."
            echo "$UNHEALTHY"
            sleep 5
          done

          echo "Timeout: Services did not become healthy within 2 minutes"
          docker compose ps
          exit 1

      - name: Show service status
        if: success()
        run: docker compose ps

      - name: Test authentication
        run: |
          echo "Testing Keycloak authentication..."
          RESPONSE=$(curl --silent --request POST \
            --url http://localhost:8080/realms/agari/protocol/openid-connect/token \
            --header 'content-type: application/x-www-form-urlencoded' \
            --data username=owner@org1.ac.za \
            --data password=pass123 \
            --data grant_type=password \
            --data client_id=dms \
            --data client_secret=VDyLEjGR3xDQvoQlrHq5AB6OwbW0Refc)

          ACCESS_TOKEN=$(echo "$RESPONSE" | jq -r '.access_token')

          if [ "$ACCESS_TOKEN" = "null" ] || [ -z "$ACCESS_TOKEN" ]; then
            echo "Failed to get access token"
            echo "Response: $RESPONSE"
            exit 1
          fi

          echo "Successfully obtained access token"
          echo "ACCESS_TOKEN=${ACCESS_TOKEN}" >> $GITHUB_ENV

      - name: Test Folio whoami endpoint
        run: |
          echo "Testing Folio /info/whoami endpoint..."
          RESPONSE=$(curl --silent --request GET \
            --url http://localhost:8000/info/whoami \
            --header "authorization: Bearer ${ACCESS_TOKEN}")

          echo "Response: $RESPONSE"

          if echo "$RESPONSE" | grep -q "owner@org1.ac.za"; then
            echo "✓ Successfully verified user identity: owner@org1.ac.za"
            exit 0
          else
            echo "✗ Failed to find owner@org1.ac.za in response"
            exit 1
          fi

      - name: Print docker compose logs
        if: always()
        run: docker compose logs

      - name: Clean up
        if: always()
        run: docker compose down -v
